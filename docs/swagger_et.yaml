openapi: 3.0.0
info:
  title: eBayClone API (ET)
  version: "1.0.0"
  description: |
    See API võimaldab hallata eBay sarnast turuplatvormi. Kõik lõpp-punktid on dokumenteeritud.
    
    Dokumentatsioon on saadaval [inglise](https://ebay-clone.olga-orlova.me/docs/en) ja [eesti](https://ebay-clone.olga-orlova.me/docs/et) keeles.

servers:
  - url: http://localhost:3000
  - url: https://olga-orlova.me
  - url: https://ebayclone.olga-orlova.me

tags:
  - name: "Users"
    description: "Kasutajate haldus"
  - name: "Sessions"
    description: "Autentimise haldus"
  - name: "Listings"
    description: "Kuulutuste haldus"
  - name: "Orders"
    description: "Tellimuste haldus"

paths:
  #####################################
  # USERS
  #####################################
  /users:
    post:
      tags:
        - "Users"
      summary: "Loo kasutaja"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserCreate"
      responses:
        '201':
          description: "Kasutaja loodud"
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 3
                  username:
                    type: string
                    example: "test"
                  email:
                    type: string
                    example: "test@gmail.com"
                  message:
                    type: string
                    example: "Kasutaja edukalt loodud"
        '400':
          description: "Vigane päring"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '409':
          description: "Konflikt - E-post on juba kasutusel"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /users/{id}:
    get:
      tags:
        - "Users"
      summary: "Hangi kasutaja"
      parameters:
        - in: path
          name: id
          description: "Kasutaja ID"
          required: true
          schema:
            type: integer
          example: 1
      responses:
        '200':
          description: "Kasutaja andmed"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        '404':
          description: "Kasutajat ei leitud"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      tags:
        - "Users"
      summary: "Asenda kasutaja"
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          description: "Kasutaja ID"
          required: true
          schema:
            type: integer
          example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserUpdate"
      responses:
        '200':
          description: "Kasutaja uuendatud"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        '400':
          description: "Vigane päring"
        '401':
          description: "Autoriseerimata - Token puudub või on vigane"
        '404':
          description: "Kasutajat ei leitud"
    patch:
      tags:
        - "Users"
      summary: "Muuda kasutaja"
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          description: "Kasutaja ID"
          required: true
          schema:
            type: integer
          example: 1
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserUpdate"
      responses:
        '200':
          description: "Kasutaja uuendatud"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        '400':
          description: "Vigane päring"
        '401':
          description: "Autoriseerimata - Token puudub või on vigane"
        '404':
          description: "Kasutajat ei leitud"
    delete:
      tags:
        - "Users"
      summary: "Kustuta kasutaja"
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          description: "Kasutaja ID"
          required: true
          schema:
            type: integer
          example: 1
      responses:
        '204':
          description: "Kasutaja kustutatud"
        '401':
          description: "Autoriseerimata - Token puudub või on vigane"
        '404':
          description: "Kasutajat ei leitud"

  #####################################
  # SESSIONS
  #####################################
  /sessions:
    post:
      tags:
        - "Sessions"
      summary: "Logi sisse"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserLogin"
      responses:
        '200':
          description: "Sisselogimine õnnestus"
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: "jwt-token-siin"
                  message:
                    type: string
                    example: "Sisselogimine õnnestus"
        '400':
          description: "Vigane päring"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '401':
          description: "Vale e-post või parool"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      tags:
        - "Sessions"
      summary: "Logi välja"
      security:
        - bearerAuth: []
      responses:
        '204':
          description: "Väljalogimine õnnestus"
        '401':
          description: "Autoriseerimata - Token puudub või on vigane"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  #####################################
  # LISTINGS
  #####################################
  /listings:
    get:
      tags:
        - "Listings"
      summary: "Hangi kõik kuulutused"
      parameters:
        - in: query
          name: category
          description: "Filtreeri kategooria järgi"
          required: false
          schema:
            type: string
          example: "elektroonika"
        - in: query
          name: minPrice
          description: "Minimaalne hind"
          required: false
          schema:
            type: number
          example: 100
        - in: query
          name: maxPrice
          description: "Maksimaalne hind"
          required: false
          schema:
            type: number
          example: 1000
      responses:
        '200':
          description: "Kuulutuste nimekiri"
          content:
            application/json:
              schema:
                type: object
                properties:
                  listings:
                    type: array
                    items:
                      $ref: "#/components/schemas/Listing"
                  message:
                    type: string
                    example: "Kuulutused edukalt leitud"
    post:
      tags:
        - "Listings"
      summary: "Loo kuulutus"
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/ListingCreate"
      responses:
        '201':
          description: "Kuulutus loodud"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/Listing"
                  - type: object
                    properties:
                      message:
                        type: string
                        example: "Kuulutus edukalt loodud"
        '400':
          description: "Vigane päring"
        '401':
          description: "Autoriseerimata - Token puudub või on vigane"

  /listings/{id}:
    get:
      tags:
        - "Listings"
      summary: "Hangi kuulutus"
      parameters:
        - in: path
          name: id
          description: "Kuulutuse ID"
          required: true
          schema:
            type: integer
          example: 1
      responses:
        '200':
          description: "Kuulutuse andmed"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Listing"
        '404':
          description: "Kuulutust ei leitud"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    patch:
      tags:
        - "Listings"
      summary: "Muuda kuulutus"
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          description: "Kuulutuse ID"
          required: true
          schema:
            type: integer
          example: 1
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/ListingUpdate"
      responses:
        '200':
          description: "Kuulutus uuendatud"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Listing"
        '400':
          description: "Vigane päring"
        '401':
          description: "Autoriseerimata - Token puudub või on vigane"
        '404':
          description: "Kuulutust ei leitud"
    delete:
      tags:
        - "Listings"
      summary: "Kustuta kuulutus"
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          description: "Kuulutuse ID"
          required: true
          schema:
            type: integer
          example: 1
      responses:
        '204':
          description: "Kuulutus kustutatud"
        '401':
          description: "Autoriseerimata - Token puudub või on vigane"
        '404':
          description: "Kuulutust ei leitud"

  #####################################
  # ORDERS
  #####################################
  /orders:
    get:
      tags:
        - "Orders"
      summary: "Hangi kasutaja tellimused"
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: status
          description: "Filtreeri staatuse järgi"
          required: false
          schema:
            type: string
            enum: [pending, confirmed, shipped, delivered, cancelled]
          example: "pending"
      responses:
        '200':
          description: "Tellimuste nimekiri"
          content:
            application/json:
              schema:
                type: object
                properties:
                  orders:
                    type: array
                    items:
                      $ref: "#/components/schemas/Order"
                  pagination:
                    type: object
                    properties:
                      total:
                        type: integer
                        example: 5
                      page:
                        type: integer
                        example: 1
                      pages:
                        type: integer
                        example: 1
                  message:
                    type: string
                    example: "Tellimused edukalt leitud"
        '401':
          description: "Autoriseerimata - Token puudub või on vigane"
    post:
      tags:
        - "Orders"
      summary: "Loo tellimus"
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderCreate"
      responses:
        '201':
          description: "Tellimus loodud"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/Order"
                  - type: object
                    properties:
                      message:
                        type: string
                        example: "Tellimus edukalt loodud"
        '400':
          description: "Vigane päring"
        '401':
          description: "Autoriseerimata - Token puudub või on vigane"

  /orders/{id}:
    get:
      tags:
        - "Orders"
      summary: "Hangi tellimus"
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          description: "Tellimuse ID"
          required: true
          schema:
            type: integer
          example: 1
      responses:
        '200':
          description: "Tellimuse andmed"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
        '404':
          description: "Tellimust ei leitud"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    patch:
      tags:
        - "Orders"
      summary: "Muuda tellimus"
      security:
        - bearerAuth: []
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderUpdate"
      responses:
        '200':
          description: "Tellimus uuendatud"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
        '400':
          description: "Vigane taotlus"
        '404':
          description: "Tellimust ei leitud"
    delete:
      tags:
        - "Orders"
      summary: "Kustuta tellimus"
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          description: "Tellimuse ID"
          required: true
          schema:
            type: integer
          example: 1
      responses:
        '200':
          description: "Tellimus kustutatud"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Success"
        '404':
          description: "Tellimust ei leitud"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /orders/{id}/cancel:
    patch:
      tags:
        - "Orders"
      summary: "Tühista tellimus"
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          description: "Tellimuse ID"
          required: true
          schema:
            type: integer
          example: 1
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                cancelReason:
                  type: string
                  example: "Muutsin meelt"
      responses:
        '200':
          description: "Tellimus edukalt tühistatud"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Tellimus edukalt tühistatud"
                  order:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      status:
                        type: string
                        example: "cancelled"
                      cancelledAt:
                        type: string
                        format: date-time
                        example: "2023-06-15T09:32:09.103Z"
                      cancelReason:
                        type: string
                        example: "Muutsin meelt"
        '401':
          description: "Autoriseerimata"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '404':
          description: "Tellimust ei leitud"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /orders/{id}/status:
    patch:
      tags:
        - "Orders"
      summary: "Uuenda tellimuse staatust"
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          description: "Tellimuse ID"
          required: true
          schema:
            type: integer
          example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - status
              properties:
                status:
                  type: string
                  enum: [pending, confirmed, shipped, delivered]
                  example: "shipped"
      responses:
        '200':
          description: "Tellimuse staatus edukalt uuendatud"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
        '400':
          description: "Vale staatus"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Vale staatus. Peab olema: pending, confirmed, shipped või delivered"
        '401':
          description: "Autoriseerimata"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '404':
          description: "Tellimust ei leitud"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

#####################################
# Components
#####################################
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          example: 1
        username:
          type: string
          example: "kasutaja1"
        email:
          type: string
          example: "kasutaja1@mail.com"
    UserCreate:
      type: object
      required:
        - username
        - email
        - password
      properties:
        username:
          type: string
          example: "kasutaja1"
        email:
          type: string
          example: "kasutaja1@mail.com"
        password:
          type: string
          example: "salasõna"
    UserLogin:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          example: "kasutaja1@mail.com"
        password:
          type: string
          example: "salasõna"
    UserUpdate:
      type: object
      properties:
        username:
          type: string
          example: "uuendatudKasutaja"
        email:
          type: string
          example: "uuendatud@mail.com"
        password:
          type: string
          example: "uusSalasõna"
    Listing:
      type: object
      properties:
        id:
          type: integer
          example: 1
        title:
          type: string
          example: "Uus toode"
        description:
          type: string
          example: "Toote kirjeldus"
        price:
          type: number
          example: 100.0
        category:
          type: string
          example: "elektroonika"
        condition:
          type: string
          example: "uus"
        location:
          type: string
          example: "Tallinn, Eesti"
        images:
          type: array
          items:
            type: string
          example: ["pilt1.jpg", "pilt2.jpg"]
        seller_id:
          type: integer
          example: 1
        created_at:
          type: string
          format: date-time
          example: "2024-01-15T10:30:00Z"
        updated_at:
          type: string
          format: date-time
          example: "2024-01-15T10:30:00Z"
    ListingCreate:
      type: object
      required:
        - title
        - description
        - price
        - category
      properties:
        title:
          type: string
          example: "Uus toode"
        description:
          type: string
          example: "Toote kirjeldus"
        price:
          type: number
          example: 100.0
        category:
          type: string
          example: "elektroonika"
        condition:
          type: string
          example: "uus"
        location:
          type: string
          example: "Tallinn, Eesti"
        images:
          type: array
          items:
            type: string
            format: binary
    ListingUpdate:
      type: object
      properties:
        title:
          type: string
          example: "Uuendatud toode"
        description:
          type: string
          example: "Uuendatud kirjeldus"
        price:
          type: number
          example: 150.0
        category:
          type: string
          example: "elektroonika"
        condition:
          type: string
          example: "kasutatud"
        location:
          type: string
          example: "Tartu, Eesti"
        images:
          type: array
          items:
            type: string
            format: binary
    Order:
      type: object
      properties:
        id:
          type: integer
          example: 1
        listing_id:
          type: integer
          example: 1
        buyer_id:
          type: integer
          example: 2
        seller_id:
          type: integer
          example: 1
        quantity:
          type: integer
          example: 1
        total_price:
          type: number
          example: 100.0
        status:
          type: string
          enum: [pending, confirmed, shipped, delivered, cancelled]
          example: "pending"
        shipping_address:
          type: string
          example: "Tallinna tn 1, Tallinn, Eesti"
        created_at:
          type: string
          format: date-time
          example: "2024-01-15T10:30:00Z"
        updated_at:
          type: string
          format: date-time
          example: "2024-01-15T10:30:00Z"
    OrderCreate:
      type: object
      required:
        - listing_id
        - quantity
        - shipping_address
      properties:
        listing_id:
          type: integer
          example: 1
        quantity:
          type: integer
          example: 1
        shipping_address:
          type: string
          example: "Tallinna tn 1, Tallinn, Eesti"
    OrderUpdate:
      type: object
      properties:
        quantity:
          type: integer
          example: 2
        status:
          type: string
          enum: [pending, confirmed, shipped, delivered, cancelled]
          example: "confirmed"
        shipping_address:
          type: string
          example: "Tartu tn 1, Tartu, Eesti"
    Error:
      type: object
      properties:
        error:
          type: string
          example: "Kõik väljad on kohustuslikud"
        code:
          type: string
          example: "VALIDATION_ERROR"
        details:
          type: object
          example: { "field": "email", "message": "E-post on kohustuslik" }
    Success:
      type: object
      properties:
        message:
          type: string
          example: "Toiming õnnestus"
